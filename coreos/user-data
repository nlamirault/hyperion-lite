#cloud-config
---
coreos:
  update:
    #reboot-strategy: etcd-lock
    reboot-strategy: best-effort
  etcd:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new
    # uncomment the following line and replace it with your discovery URL
    # discovery: https://discovery.etcd.io/12345693838asdfasfadf13939923
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  units:
  - name: docker.service
    content: |
      [Unit]
      Description=Docker Application Container Engine
      Documentation=http://docs.docker.io

      [Service]
      ExecStartPre=/bin/mount --make-rprivate /
      # Run docker but don't have docker automatically restart
      # containers. This is a job for systemd and unit files.
      ExecStart=/usr/bin/docker -d -s=btrfs -r=false -H fd://

      [Install]
      WantedBy=multi-user.target
  - name: docker-tcp.socket
    command: start
    content: |
      [Unit]
      Description=Docker Socket for Remote API

      [Socket]
      ListenStream=4243
      Service=docker.service
      BindIPv6Only=both

      [Install]
      WantedBy=sockets.target
  - name: etcd.service
    command: start
  - name: fleet.service
    command: start
    content: |
      [Unit]
      Description=fleet

      [Service]
      Environment=FLEET_PUBLIC_IP=$private_ipv4
      ExecStart=/usr/bin/fleet
  - name: stop-reboot-manager.service
    command: start
    content: |
      [Unit]
      Description=stop update-engine-reboot-manager

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/systemctl stop update-engine-reboot-manager.service
      ExecStartPost=/usr/bin/systemctl mask update-engine-reboot-manager.service
  - name: stop-update-engine.service
    command: start
    content: |
      [Unit]
      Description=stop update-engine

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/systemctl stop update-engine.service
      ExecStartPost=/usr/bin/systemctl mask update-engine.service
  - name: write-hyperion-motd.service
    command: start
    content: |
      [Unit]
      Description=write the Hyperion motd
      ConditionFileNotEmpty=/run/hyperion/motd

      [Service]
      Type=oneshot
      ExecStartPre=/usr/bin/rm /etc/motd
      ExecStart=/usr/bin/ln -s /run/hyperion/motd /etc/motd
   - name: hyperion.service
     command: start
     content: |
       [Unit]
       Description=hyperion-lite
       After=docker.service
       Requires=docker.service

       [Service]
       ExecStart=/usr/bin/docker run --rm -v /var/docker/hyperion-lite/elasticsearch:/var/lib/elasticsearch -v /var/docker/hyperion-lite/graphite:/var/lib/graphite/storage/whisper -v /var/docker/hyperion-lite/supervisor:/var/log/supervisor -v /var/docker/hyperion-lite/nginx:/var/log/nginx -p 9990:80 -p 9992:9200 -p 9979:6379 -p 8083:8083 -p 8086:8086 -p 8125:8125/udp -p 2003:2003/tcp --name hyperion-lite nlamirault/hyperion-lite
       ExecStartPost=/usr/bin/etcdctl set /hyperion-lite/host ${COREOS_PUBLIC_IPV4}
       ExecStop=/usr/bin/docker stop hyperion-lite
       ExecStopPost=/usr/bin/etcdctl rm /hyperion-lite/host

       [X-Fleet]
       X-Conflicts=hyperion-lite.service
write_files:
  - path: /run/hyperion/motd
    content: " \n\e[39mWelcome to Hyperion-Lite\t\t\tPowered by Core\e[38;5;45mO\e[38;5;206mS\e[39m\n\n"
